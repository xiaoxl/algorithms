# independent set

def: vertices are not connnected directly by edges from G

input: undirected G
output: indepedent set S with maximal size

not NP?


for all optimization problem: 
1. to check whether it is NP, we need be able to verify something is maximal, which in general is impossible.
2. In general a way to verify something is maximal is to construct a maximal answer, and compare the size. 
3. Using this idea, if this problem is NP, it should also be in P.
4. So unless NP=P, optimization problems are hard to be NP.



## search problem

input: undirected G and goal g
output: independent set S with size >=g


Thm: this is NP-C.

proof:

1. NP: easy
2. 3SAT->IS


is->max-is

so max-is is NP-hard: any NP can be reduced to it but not necessarily in NP




## Clique

now we can use IS is NP-C to show other graph problem instead of using logical problem



## vertex cover is NP-C


::: {#def-}
## Vertex cover
S is a vertex cover if it covers every edge: for every e=(x,y), either x in S or y in S.
:::

vertex cover S of size <=b


## subset-sum
knapsack is NP-C.

